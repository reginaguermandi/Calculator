Calculadora 

HTML: 

0- em vez de definier classe pra operador e numeros, definir DATA-KEY e DATA-TYPE.
1- div pro container geral
2- div pro container da calculadora
3- div pro container do display onde tem o resultado da calculadora
4- div pro container de teclas( numeros e operadores)
4.1- teclas com a tag button

CSS:

1- definir teclas em display GRID
2- 4 colunas
3- definir grid-template-area : entre aspas escrever o nome da classe na ordem em que deseja
4- definir o nome da grid-area em cada classe.

JS:

/* Teclas Funcionais */ Funciona se as teclas pressionadas aparecem no console do browser.

1- definir apenas uma variavel para todas teclas com querySelector (fora da função)
2- add um event listener CLICK para as teclas.
3- SE a tecla target NÃO for um botão, retornar o ancestral mais próximo.
4- criar uma variavel key que recebe o valor das teclas ( EVENT.TARGET)
5- criar uma variavel keyValue que recebe o conteudo de texto(Node.textContent) da varivel Key.

/* Sobrescrever o resultado no display */ Funciona se aparece a tecla correspondente pressionada no display.

1- criar uma variavel display com querySelector. (fora da função)
2- criar uma variavel displayValue que recebe textContent do display.
3- definir o textContent de display para KeyValue. ( o valor da tecla pressionada aparece no display)


/* Fazer com que o NÚMERO pressionado não seja sobrescrito e sim 'concatenado' */

1- SE o displayValue for igual a string '0', o conteudo do texto do display é igual a KeyValue
2- SENÃO será o valor do display + keyValue

3*- fora da função definir uma variavel 'calculator' que recebe querySelector('.calculator')
4- definir que calculator.dataset.firstNumber recebe displayValue.
5- definir que calculator.dataset.operator recebe key.dataset.key 

/* montar estrutura do calculo */

1- SE o displayValue for igual a 'EQUAL' 
2- definir uma variavel firstNumber que recebe calculator.dataset.firstNumber
3- definir uma variavel operator que recebe calculator.dataset.operator
4- definir uma variavel secondNumber que recebe displayValue(ultimo numero que fica digitado)


/* Função pra executar o calculo */

1- criar função calculate com 3 argumentos
2- redefinir a variavel firstNumber para parseInt(1º argumento)(retorna string em number)
3- redefinir a variavel secondNumber para parseInt(3º argumento)
4- definir uma variavel pra guardar o resultado que recebe uma string vazia
5- montar IF's comparando qual operador e retornando o calculo correspondente usando as váriaveis definidas anteriormente.
6- definir display.textContent que recebe a variavel contendo o resultado.

7**- no final do IF EQUAL definir display.textContent que recebe a função calculate(firstNumber, operator, secondNumber).


/* TECLA CLEAR */

1- SE o display(ou type) for igual a 'clear' definir display.textContent pra '0'
2- delete calculator.dataset.firstNumber
3- delete calculator.dataset.operator

4*- (fora do if) definir calculator.dataset.previousKeyType para type




